#include <stdio.h>

#define MAX_SIZE 10

int input(int *a, int *n, int *shift);
void shift1(int *a, int n, int shift);
void output(int *a, int n);

int main(void) {
    int a[MAX_SIZE];
    int n, shift;

    if (input(a, &n, &shift)) {
        shift1(a, n, shift);
        output(a, n);
    } else {
        printf("n/a\n");
    }

    return 0;
}

int input(int *a, int *n, int *shift) {
    int i, k, result = 1;
    char c;

    if (scanf("%d", n) != 1 || *n <= 0 || *n > MAX_SIZE) {
        result = 0;
    }

    for (i = 0; i < *n && result; i++) {
        if (scanf("%d", &k) != 1) {
            result = 0;
        }
        a[i] = k;
    }

    if (result && scanf("%d", shift) != 1) {
        result = 0;
    }

    while ((c = getchar()) != '\n' && c != EOF) {
        if (c != ' ' && c != '\t') {
            result = 0;
        }
    }

    return result;
}

void shift1(int *a, int n, int shift) {
    int b[MAX_SIZE];
    int i, good_shift;

    if (shift >= 0) {
        good_shift = shift % n;
    } else {
        good_shift = n + (shift % n);
        if (good_shift == n) {
            good_shift = 0;
        }
    }

    for (i = 0; i < n; i++) {
        int index = (i + good_shift) % n;
        b[i] = a[index];
    }

    for (i = 0; i < n; i++) {
        a[i] = b[i];
    }
}

void output(int *a, int n) {
    int i;
    for (i = 0; i < n; i++) {
        printf("%d", a[i]);
        if (i < n - 1) {
            printf(" ");
        }
    }
    printf("\n");
}









#include <stdio.h>

#define LEN 100

void sum(int *buff1, int len1, int *buff2, int len2, int *result, int *result_length);
void sub(int *buff1, int len1, int *buff2, int len2, int *result, int *result_length);

int input(int *buff, int *len);
void output(int *buff, int len);
int compare(int *a, int len1, int *b, int len2);

int main() {
    int a[LEN], b[LEN], sum_res[LEN + 1], sub_res[LEN];
    int len1 = 0, len2 = 0, len_sum = 0, len_sub = 0;

    if (input(a, &len1) && input(b, &len2)) {
        sum(a, len1, b, len2, sum_res, &len_sum);
        output(sum_res, len_sum);

        if (compare(a, len1, b, len2)) {
            sub(a, len1, b, len2, sub_res, &len_sub);
            output(sub_res, len_sub);
        } else {
            printf("n/a\n");
        }
    } else {
        printf("n/a\n");
    }

    return 0;
}

int input(int *buff, int *len) {
    int k, end = 1;
    char c;
    *len = 0;

    while (scanf("%d", &k) == 1 && k >= 0 && k <= 9) {
        if (*len >= LEN) {
            end = 0;
        }
        buff[(*len)++] = k;
    }

    while ((c = getchar()) != '\n' && c != EOF) {
        if (c != ' ' && c != '\t') {
            end = 0;
        }
    }

    return end && *len > 0;
}

void output(int *buff, int len) {
    int i = 0;
    while (i < len - 1 && buff[i] == 0) {
        i++;
    }

    for (; i < len; i++) {
        printf("%d", buff[i]);
        if (i < len - 1) {
            printf(" ");
        }
    }
    printf("\n");
}

void sum(int *a, int len1, int *b, int len2, int *res, int *res_len) {}

int compare(int *a, int len1, int *b, int len2) {
    int end = 1;
    if (len1 > len2) end = 1;
    if (len1 < len2) end = 0;

    for (int i = 0; i < len1; i++) {
        if (a[i] > b[i]) end = 1;
        if (a[i] < b[i]) end = 0;
    }
    return end;
}

void sub(int *a, int len1, int *b, int len2, int *res, int *res_len) {}
