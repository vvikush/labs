
#include <stdio.h>
#include <string.h>

#define MAX_PATH 256
#define MAX_LINE 1024

int vybor(int *n) {
    int res = 0;
    if (scanf("%d", n) == 1) {
        res = 1;
    }
    return res;
}

int file(const char *path) {
    int result = 0;
    FILE *f = fopen(path, "r");
    if (f != NULL) {
        int pust = 1;
        char ch;
        while ((ch = fgetc(f)) != EOF) {
            putchar(ch);
            pust = 0;
        }
        fclose(f);
        if (!pust) {
            result = 1;
        }
    }
    return result;
}

int load_file(char *path) {
    int result = 0;
    if (scanf("%255s", path) == 1) {
        result = file(path);
    }
    return result;
}

int write(const char *path) {
    int result = 0;
    char line[MAX_LINE];
    scanf(" ");  // захватываем пробел перед строкой
    if (fgets(line, MAX_LINE, stdin)) {
        size_t len = strlen(line);
        if (len > 0 && line[len - 1] == '\n') {
            line[len - 1] = '\0';
        }
        FILE *f = fopen(path, "a");
        if (f != NULL) {
            fprintf(f, "\n%s", line);
            fclose(f);
            result = file(path);
        }
    }
    return result;
}

int main() {
    int n = 0;
    int loaded = 0;
    int running = 1;
    char path[MAX_PATH] = "";

    while (running) {
        if (!vybor(&n)) {
            printf("n/a\n");
            running = 0;
        } else {
            if (n == -1) {
                running = 0;
            } else {
                if (n == 1) {
                    if (load_file(path)) {
                        loaded = 1;
                    } else {
                        printf("n/a\n");
                        loaded = 0;
                    }
                    printf("\n");
                }
                if (n == 2) {
                    if (!loaded || !write(path)) {
                        printf("n/a\n");
                    }
                    printf("\n");
                }
            }
        }
    }

    return 0;
}





#include <stdio.h>
#include <string.h>

#define MAX_PATH 256
#define MAX_LINE 1024

int vybor(int *n) {
    return scanf("%d", n) == 1;
}

int file(const char *path) {
    FILE *f = fopen(path, "r");
    if (f == NULL) return 0;

    int pust = 1;
    char ch;
    while ((ch = fgetc(f)) != EOF) {
        putchar(ch);
        pust = 0;
    }
    fclose(f);
    return !pustf;
}

int load_file(char *path) {
    if (scanf("%255s", path) != 1) return 0;
    return file(path);
}

int write(const char *path) {
    char line[MAX_LINE];
    scanf(" ");
    if (!fgets(line, MAX_LINE, stdin)) return 0;

    size_t len = strlen(line);
    if (len > 0 && line[len - 1] == '\n') {
        line[len - 1] = '\0';
    }

    FILE *f = fopen(path, "a");
    if (f == NULL) return 0;

    fprintf(f, "\n%s", line);
    fclose(f);
    return file(path);
}

int main() {
    int n = 0;
    int loaded = 0;
    char path[MAX_PATH] = "";
    int running = 1;

    while (running) {
        if (!vybor(&n)) {
            printf("n/a\n");
            return 0;
        }

        if (n == -1) return 0;

        if (n == 1) {
            if (load_file(path)) {
                loaded = 1;
            } else {
                printf("n/a\n");
                loaded = 0;
            }
            printf("\n");
        }

        if (n == 2) {
            if (!loaded || !write(path)) {
                printf("n/a\n");
            }
            printf("\n");
        }
    }

    return 0;
}
