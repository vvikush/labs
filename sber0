#include <stdio.h>
#include <math.h>

#define NMAX 30

int input(int *a, int *n);
double mean(int *a, int n);
double variance(int *a, int n, double mean_val);
int find_value(int *a, int n, double mean_val, double threshold);
void output_result(int result);

int main() {
    int n, a[NMAX];

    if (!input(a, &n)) {
        printf("n/a\n");
        return 1;
    }

    double m = mean(a, n);
    double var = variance(a, n, m);
    double threshold = m + 3 * sqrt(var);

    int result = find_value(a, n, m, threshold);
    output_result(result);

    return 0;
}

int input(int *a, int *n) {
    if (scanf("%d", n) != 1 || *n <= 0 || *n > NMAX)
        return 0;

    for (int i = 0; i < *n; i++) {
        if (scanf("%d", &a[i]) != 1)
            return 0;
    }

    // Проверка на лишние символы после массива
    char c;
    while ((c = getchar()) != '\n' && c != EOF) {
        if (c != ' ' && c != '\t')  // допускаем пробелы и табы
            return 0;
    }

    return 1;
}

double mean(int *a, int n) {
    double sum = 0;
    for (int i = 0; i < n; i++)
        sum += a[i];
    return sum / n;
}

double variance(int *a, int n, double mean_val) {
    double sum = 0;
    for (int i = 0; i < n; i++) {
        double d = a[i] - mean_val;
        sum += d * d;
    }
    return sum / n;
}

int find_value(int *a, int n, double mean_val, double threshold) {
    for (int i = 0; i < n; i++) {
        int x = a[i];
        if (x != 0 && x % 2 == 0 && x >= mean_val && x <= threshold) {
            return x;
        }
    }
    return 0;
}

void output_result(int result) {
    printf("%d\n", result);
}
